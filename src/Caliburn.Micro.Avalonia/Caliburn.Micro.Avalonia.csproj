<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;</TargetFrameworks>
    <PackageId>Caliburn.Micro.Avalonia</PackageId>
    <Product>Caliburn.Micro</Product>
    <RootNamespace>Caliburn.Micro</RootNamespace>
    <AssemblyOriginatorKeyFile>.\..\Caliburn.Micro.snk</AssemblyOriginatorKeyFile>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);IncludeProjectReferencesWithPrivateAssetsAttributeInPackage</TargetsForTfmSpecificBuildOutput>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeReferenceAssemblies</TargetsForTfmSpecificContentInPackage>
    <SignAssembly>true</SignAssembly>
    <LangVersion>latest</LangVersion>
    <BuildProjectReferences Condition="'$(NoBuild)' == 'true'">false</BuildProjectReferences>
    <!-- Removed the .xml from DefaultAllowedOutputExtensionsInPackageBuildOutputFolder -->
    <DefaultAllowedOutputExtensionsInPackageBuildOutputFolder>.dll; .exe; .winmd; .json; .pri</DefaultAllowedOutputExtensionsInPackageBuildOutputFolder>

    <!-- Generate documentation file -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- Generate symbols package -->
    <IncludeSymbols>false</IncludeSymbols>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants>AVALONIA</DefineConstants>
    <Title>Caliburn.Micro Avalonia UI</Title>
    <PackageIcon>CaliburnIcon.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>


  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0|AnyCPU'" />

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0|AnyCPU'" />

  <ItemGroup>
    <PackageReference Include="Avalonia" Version="11.3.5" />
    <PackageReference Include="Avalonia.Desktop" Version="11.3.5" />
    <PackageReference Include="Avalonia.Diagnostics" Version="11.3.5" />
    <PackageReference Include="Avalonia.Markup.Xaml.Loader" Version="11.3.5" />
    <PackageReference Include="System.Reactive" Version="6.0.1" />
    <PackageReference Include="Xaml.Behaviors.Avalonia" Version="11.3.2" />
    <PackageReference Include="Xaml.Behaviors.Interactivity" Version="11.3.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Caliburn.Micro.Platform.Core\Caliburn.Micro.Platform.Core.csproj" PrivateAssets="all">
    </ProjectReference>
    <ProjectReference Include="..\Caliburn.Micro.Core\Caliburn.Micro.Core.csproj" >
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\Caliburn.Micro.Platform\*.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\AssemblyInfo.cs" Link="Platforms\netcore-avalonia\AssemblyInfo.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\AttachedCollection.cs" Link="Platforms\netcore-avalonia\AttachedCollection.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\BootstrapperBase.cs" Link="Platforms\netcore-avalonia\BootstrapperBase.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\NavigationFrame.cs" Link="Platforms\netcore-avalonia\CaliburnFrame.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\INavigationService.cs" Link="Platforms\netcore-avalonia\INavigationService.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\NavigationHelper.cs" Link="Platforms\netcore-avalonia\NavigationHelper.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\NavigationExtensions.cs" Link="Platforms\netcore-avalonia\NavigationExtensions.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\IWindowManager.cs" Link="Platforms\netcore-avalonia\IWindowManager.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\Parameter.cs" Link="Platforms\netcore-avalonia\Parameter.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\TriggerAction.cs" Link="Platforms\netcore-avalonia\TriggerAction.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\WindowConductor.cs" Link="Platforms\netcore-avalonia\WindowConductor.cs" />
    <Compile Include="..\Caliburn.Micro.Platform\Platforms\netcore-avalonia\WindowManager.cs" Link="Platforms\netcore-avalonia\WindowManager.cs" />
 </ItemGroup>

  <ItemGroup>
    <None Include="..\..\CaliburnIcon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Update="Microsoft.SourceLink.GitHub" Version="8.0.0" />
    <PackageReference Update="Nerdbank.GitVersioning" Version="3.7.112" />
  </ItemGroup>

  <Target Name="IncludeProjectReferencesWithPrivateAssetsAttributeInPackage"
        Condition="'@(ProjectReference)' != '' and @(ProjectReference->AnyHaveMetadataValue('PrivateAssets', 'all'))"
        DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <_projectReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'all'))" />

      <BuildOutputInPackage Include="@(_projectReferenceCopyLocalPaths)"
                            TargetPath="%(_projectReferenceCopyLocalPaths.DestinationSubDirectory)" />
      <TfmSpecificDebugSymbolsFile Include="@(_projectReferenceCopyLocalPaths->WithMetadataValue('Extension', '.pdb'))"
                                   TargetPath="%(_projectReferenceCopyLocalPaths.DestinationSubDirectory)"
                                   TargetFramework="$(TargetFramework)"
                                   Condition="'$(IncludeSymbols)' == 'true'" />

      <!-- Remove symbol from the non symbol package. -->
      <BuildOutputInPackage Remove="@(_projectReferenceCopyLocalPaths->WithMetadataValue('Extension', '.pdb'))" />
      <BuildOutputInPackage Remove="@(_projectReferenceCopyLocalPaths->WithMetadataValue('Extension', '.xml'))" />
    </ItemGroup>
  </Target>


  <Target Name="IncludeReferenceAssemblies">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(TargetRefPath)" PackagePath="ref/$(TargetFramework)" />
      <TfmSpecificPackageFile Include="$(DocumentationFile)" PackagePath="ref/$(TargetFramework)" Condition="'$(GenerateDocumentationFile)' == 'true'" />
    </ItemGroup>
  </Target>
</Project>
